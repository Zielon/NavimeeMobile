apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply from: '../config/quality/quality.gradle'
apply plugin: 'com.github.triplet.play'
apply plugin: 'me.tatarka.retrolambda'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}



android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'

    defaultConfig {
        applicationId 'org.pl.android.navimee'
        minSdkVersion 16
        targetSdkVersion 25
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        versionCode 1000
        // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
        versionName '0.1.0'
        multiDexEnabled true //important
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }


    signingConfigs {
        // You must set up an environment var before release signing
        // Run: export APP_KEY={password}
        // TODO Add your release keystore in /keystore folder
        release {
            storeFile file('keystore/release.keystore')
            keyAlias 'releasekey'
            storePassword "navimee"
            keyPassword "haslo123"
            lintOptions {
                disable 'MissingTranslation'
            }
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.betaDistributionReleaseNotesFilePath =
                    file('../crashlytics_release_notes.txt').absolutePath
        }

        debug {
            versionNameSuffix " Debug"
            debuggable true
        }
    }

    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    //Needed because of this https://github.com/square/okio/issues/58
    lintOptions {
        warning 'InvalidPackage'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

play {
    serviceAccountEmail = 'your-service-account-email'
    pk12File = file('key.p12')
    // By default publishes to Alpha channel
    track = 'alpha'
}

dependencies {
    final PLAY_SERVICES_VERSION = '11.6.0'
    final SUPPORT_LIBRARY_VERSION = '25.3.1'
    final RETROFIT_VERSION = '2.3.0'
    final DAGGER_VERSION = '2.5'
    final MOCKITO_VERSION = '2.6.2'
    final HAMCREST_VERSION = '1.3'
    final ESPRESSO_VERSION = '3.0.0'
    final RUNNER_VERSION = '1.0.0'
    final BUTTERKNIFE_VERSION = '8.4.0'
    final AUTO_VALUE_VERSION = '1.3'
    final AUTO_VALUE_GSON_VERSION = '0.4.2'
    final APP_INTRO_VERSION = 'v4.2.2'
    final BOTTOM_BAR_VERSION = '2.3.1'
    final FIREBASE_VERSION = '11.6.0'

    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:$MOCKITO_VERSION"

    // App Dependencies
    compile "com.google.android.gms:play-services-gcm:$PLAY_SERVICES_VERSION"
    compile "com.google.android.gms:play-services-maps:$PLAY_SERVICES_VERSION"
    compile "com.google.android.gms:play-services-location:$PLAY_SERVICES_VERSION"
    compile "com.google.android.gms:play-services-places:$PLAY_SERVICES_VERSION"
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"

    compile "org.apache.commons:commons-collections4:4.0"

    compile("com.squareup.sqlbrite2:sqlbrite:2.0.0") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }
    compile 'net.danlew:android.joda:2.9.9'


    compile 'com.jakewharton.timber:timber:4.1.2'
    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    //rx permissions
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.9.4@aar'
    compile 'pl.charmas.android:android-reactive-location2:2.0@aar'

    //firebase
    compile "com.google.firebase:firebase-auth:$FIREBASE_VERSION"
    compile "com.google.firebase:firebase-core:${FIREBASE_VERSION}"
    compile "com.google.firebase:firebase-database:${FIREBASE_VERSION}"
    compile "com.google.firebase:firebase-messaging:${FIREBASE_VERSION}"
    compile "com.google.firebase:firebase-firestore:${FIREBASE_VERSION}"
    compile 'com.kelvinapps:rxfirebase:0.0.15'
    compile 'com.firebase:geofire-android:2.1.3'

    //gui
    compile "com.github.apl-devs:appintro:$APP_INTRO_VERSION"
    compile "com.roughike:bottom-bar:$BOTTOM_BAR_VERSION"
    compile 'com.fnp:material-preferences:0.1.4'
    compile 'devs.mulham.horizontalcalendar:horizontalcalendar:1.2.0'
    compile 'com.ethanhua:skeleton:1.0.0'
    compile 'com.allattentionhere:fabulousfilter:0.0.4'
    compile 'com.afollestad.material-dialogs:core:0.9.6.0'
    compile('com.google.android:flexbox:0.2.7') {
        exclude group: 'com.android.support'
    }
    compile("com.mikepenz:materialdrawer:6.0.2@aar") {
        transitive = true
    }

    //google map
    compile 'com.github.jd-alexander:library:1.1.0'
    compile 'com.google.maps.android:android-maps-utils:0.4+'

    //facebook
    compile 'com.facebook.android:facebook-login:[4,5)'

    // Replace provided dependency below with official AutoValue once this issue is fixed
    // https://github.com/google/auto/issues/268
    provided "com.jakewharton.auto.value:auto-value-annotations:$AUTO_VALUE_VERSION"
    provided "com.ryanharter.auto.value:auto-value-gson:$AUTO_VALUE_GSON_VERSION"
    annotationProcessor "com.google.auto.value:auto-value:$AUTO_VALUE_VERSION"
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.4-rc2'
    annotationProcessor "com.ryanharter.auto.value:auto-value-gson:$AUTO_VALUE_GSON_VERSION"
    annotationProcessor 'com.squareup:javapoet:1.7.0'
    // https://github.com/rharter/auto-value-parcel/issues/64

    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    provided 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2
    annotationProcessor daggerCompiler
    testAnnotationProcessor daggerCompiler
    androidTestAnnotationProcessor daggerCompiler

    // Instrumentation test dependencies
    androidTestCompile jUnit
    androidTestCompile mockito
    androidTestCompile "org.mockito:mockito-android:$MOCKITO_VERSION"
    androidTestCompile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestCompile "com.android.support.test:rules:$RUNNER_VERSION"

    // Unit tests dependencies
    testCompile jUnit
    testCompile mockito
    testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"
    testCompile 'org.robolectric:robolectric:3.3'
}

// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.3.0'
            }
        }
    }
}